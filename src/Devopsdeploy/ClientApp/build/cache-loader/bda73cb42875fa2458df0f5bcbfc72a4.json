{"remainingRequest":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/ts-loader/index.js??ref--4-3!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/shared/util/entity-utils.ts","dependencies":[{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/shared/util/entity-utils.ts","mtime":1596165326468},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHBpY2sgZnJvbSAnbG9kYXNoL3BpY2snOwovKioKICogUmVtb3ZlcyBmaWVsZHMgd2l0aCBhbiAnaWQnIGZpZWxkIHRoYXQgZXF1YWxzICcnLgogKiBUaGlzIGZ1bmN0aW9uIHdhcyBjcmVhdGVkIHRvIHByZXZlbnQgZW50aXRpZXMgdG8gYmUgc2VudCB0bwogKiB0aGUgc2VydmVyIHdpdGggcmVsYXRpb25zaGlwIGZpZWxkcyB3aXRoIGVtcHR5IGFuIGVtcHR5IGlkIGFuZCB0aHVzCiAqIHJlc3VsdGluZyBpbiBhIDUwMC4KICoKICogQHBhcmFtIGVudGl0eSBPYmplY3QgdG8gY2xlYW4uCiAqLwpleHBvcnQgY29uc3QgY2xlYW5FbnRpdHkgPSBlbnRpdHkgPT4gewogICAgY29uc3Qga2V5c1RvS2VlcCA9IE9iamVjdC5rZXlzKGVudGl0eSkuZmlsdGVyKGsgPT4gIShlbnRpdHlba10gaW5zdGFuY2VvZiBPYmplY3QpIHx8IChlbnRpdHlba11bJ2lkJ10gIT09ICcnICYmIGVudGl0eVtrXVsnaWQnXSAhPT0gLTEpKTsKICAgIHJldHVybiBwaWNrKGVudGl0eSwga2V5c1RvS2VlcCk7Cn07Ci8qKgogKiBTaW1wbHkgbWFwIGEgbGlzdCBvZiBlbGVtZW50IHRvIGEgbGlzdCBhIG9iamVjdCB3aXRoIHRoZSBlbGVtZW50IGFzIGlkLgogKgogKiBAcGFyYW0gaWRMaXN0IEVsZW1lbnRzIHRvIG1hcC4KICogQHJldHVybnMgVGhlIGxpc3Qgb2Ygb2JqZWN0cyB3aXRoIG1hcHBlZCBpZHMuCiAqLwpleHBvcnQgY29uc3QgbWFwSWRMaXN0ID0gKGlkTGlzdCkgPT4gaWRMaXN0LmZpbHRlcigoZW50aXR5SWQpID0+IGVudGl0eUlkICE9PSAnJykubWFwKChlbnRpdHlJZCkgPT4gKHsgaWQ6IGVudGl0eUlkIH0pKTsKZXhwb3J0IGNvbnN0IG92ZXJyaWRlUGFnaW5hdGlvblN0YXRlV2l0aFF1ZXJ5UGFyYW1zID0gKHBhZ2luYXRpb25CYXNlU3RhdGUsIGxvY2F0aW9uU2VhcmNoKSA9PiB7CiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKGxvY2F0aW9uU2VhcmNoKTsKICAgIGNvbnN0IHBhZ2UgPSBwYXJhbXMuZ2V0KCdwYWdlJyk7CiAgICBjb25zdCBzb3J0ID0gcGFyYW1zLmdldCgnc29ydCcpOwogICAgaWYgKHBhZ2UgJiYgc29ydCkgewogICAgICAgIGNvbnN0IHNvcnRTcGxpdCA9IHNvcnQuc3BsaXQoJywnKTsKICAgICAgICBwYWdpbmF0aW9uQmFzZVN0YXRlLmFjdGl2ZVBhZ2UgPSArcGFnZTsKICAgICAgICBwYWdpbmF0aW9uQmFzZVN0YXRlLnNvcnQgPSBzb3J0U3BsaXRbMF07CiAgICAgICAgcGFnaW5hdGlvbkJhc2VTdGF0ZS5vcmRlciA9IHNvcnRTcGxpdFsxXTsKICAgIH0KICAgIHJldHVybiBwYWdpbmF0aW9uQmFzZVN0YXRlOwp9Owo="},{"version":3,"file":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/shared/util/entity-utils.ts","sourceRoot":"","sources":["/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/shared/util/entity-utils.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,aAAa,CAAC;AAG/B;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,MAAM,CAAC,EAAE;IAClC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEzI,OAAO,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,MAA0B,EAAE,EAAE,CACtD,MAAM,CAAC,MAAM,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAE/F,MAAM,CAAC,MAAM,sCAAsC,GAAG,CAAC,mBAAyC,EAAE,cAAsB,EAAE,EAAE;IAC1H,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,cAAc,CAAC,CAAC;IACnD,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAChC,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAChC,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,mBAAmB,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC;QACvC,mBAAmB,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACxC,mBAAmB,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;KAC1C;IACD,OAAO,mBAAmB,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import pick from 'lodash/pick';\nimport { IPaginationBaseState } from 'react-jhipster';\n\n/**\n * Removes fields with an 'id' field that equals ''.\n * This function was created to prevent entities to be sent to\n * the server with relationship fields with empty an empty id and thus\n * resulting in a 500.\n *\n * @param entity Object to clean.\n */\nexport const cleanEntity = entity => {\n  const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\n\n  return pick(entity, keysToKeep);\n};\n\n/**\n * Simply map a list of element to a list a object with the element as id.\n *\n * @param idList Elements to map.\n * @returns The list of objects with mapped ids.\n */\nexport const mapIdList = (idList: ReadonlyArray<any>) =>\n  idList.filter((entityId: any) => entityId !== '').map((entityId: any) => ({ id: entityId }));\n\nexport const overridePaginationStateWithQueryParams = (paginationBaseState: IPaginationBaseState, locationSearch: string) => {\n  const params = new URLSearchParams(locationSearch);\n  const page = params.get('page');\n  const sort = params.get('sort');\n  if (page && sort) {\n    const sortSplit = sort.split(',');\n    paginationBaseState.activePage = +page;\n    paginationBaseState.sort = sortSplit[0];\n    paginationBaseState.order = sortSplit[1];\n  }\n  return paginationBaseState;\n};\n"]}]}