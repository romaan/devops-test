{"remainingRequest":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/ts-loader/index.js??ref--4-3!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/config/notification-middleware.ts","dependencies":[{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/config/notification-middleware.ts","mtime":1596165325661},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgaXNQcm9taXNlIH0gZnJvbSAncmVhY3QtamhpcHN0ZXInOwppbXBvcnQgeyB0b2FzdCB9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JzsKY29uc3QgYWRkRXJyb3JBbGVydCA9IChtZXNzYWdlLCBrZXksIGRhdGEpID0+IHsKICAgIHRvYXN0LmVycm9yKG1lc3NhZ2UpOwp9OwpleHBvcnQgZGVmYXVsdCAoKSA9PiBuZXh0ID0+IGFjdGlvbiA9PiB7CiAgICAvLyBJZiBub3QgYSBwcm9taXNlLCBjb250aW51ZSBvbgogICAgaWYgKCFpc1Byb21pc2UoYWN0aW9uLnBheWxvYWQpKSB7CiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTsKICAgIH0KICAgIC8qKgogICAgICoKICAgICAqIFRoZSBub3RpZmljYXRpb24gbWlkZGxld2FyZSBzZXJ2ZXMgdG8gZGlzcGF0Y2ggdGhlIGluaXRpYWwgcGVuZGluZyBwcm9taXNlIHRvCiAgICAgKiB0aGUgcHJvbWlzZSBtaWRkbGV3YXJlLCBidXQgYWRkcyBhIGB0aGVuYCBhbmQgYGNhdGNoLgogICAgICovCiAgICByZXR1cm4gbmV4dChhY3Rpb24pCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGlmIChhY3Rpb24ubWV0YSAmJiBhY3Rpb24ubWV0YS5zdWNjZXNzTWVzc2FnZSkgewogICAgICAgICAgICB0b2FzdC5zdWNjZXNzKGFjdGlvbi5tZXRhLnN1Y2Nlc3NNZXNzYWdlKTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2UuYWN0aW9uICYmIHJlc3BvbnNlLmFjdGlvbi5wYXlsb2FkICYmIHJlc3BvbnNlLmFjdGlvbi5wYXlsb2FkLmhlYWRlcnMpIHsKICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHJlc3BvbnNlLmFjdGlvbi5wYXlsb2FkLmhlYWRlcnM7CiAgICAgICAgICAgIGxldCBhbGVydCA9IG51bGw7CiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKGhlYWRlcnMpLmZvckVhY2goKFtrLCB2XSkgPT4gewogICAgICAgICAgICAgICAgaWYgKGsudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLWFsZXJ0JykpIHsKICAgICAgICAgICAgICAgICAgICBhbGVydCA9IHY7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBpZiAoYWxlcnQpIHsKICAgICAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3MoYWxlcnQpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpOwogICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIGlmIChhY3Rpb24ubWV0YSAmJiBhY3Rpb24ubWV0YS5lcnJvck1lc3NhZ2UpIHsKICAgICAgICAgICAgdG9hc3QuZXJyb3IoYWN0aW9uLm1ldGEuZXJyb3JNZXNzYWdlKTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAoZXJyb3IgJiYgZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZTsKICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgIGlmICghKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxICYmIChlcnJvci5tZXNzYWdlID09PSAnJyB8fCAoZGF0YSAmJiBkYXRhLnBhdGggJiYgZGF0YS5wYXRoLmluY2x1ZGVzKCcvYXBpL2FjY291bnQnKSkpKSkgewogICAgICAgICAgICAgICAgbGV0IGk7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKHJlc3BvbnNlLnN0YXR1cykgewogICAgICAgICAgICAgICAgICAgIC8vIGNvbm5lY3Rpb24gcmVmdXNlZCwgc2VydmVyIG5vdCByZWFjaGFibGUKICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoJ1NlcnZlciBub3QgcmVhY2hhYmxlJywgJ2Vycm9yLnNlcnZlci5ub3QucmVhY2hhYmxlJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIGNhc2UgNDAwOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuZW50cmllcyhyZXNwb25zZS5oZWFkZXJzKTsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9ySGVhZGVyID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVudGl0eUtleSA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnMuZm9yRWFjaCgoW2ssIHZdKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoay50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKCdhcHAtZXJyb3InKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9ySGVhZGVyID0gdjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGsudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLXBhcmFtcycpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5S2V5ID0gdjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnJvckhlYWRlcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZW50aXR5TmFtZSA9IGVudGl0eUtleTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoZXJyb3JIZWFkZXIsIGVycm9ySGVhZGVyLCB7IGVudGl0eU5hbWUgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZGF0YSAhPT0gJycgJiYgZGF0YS5maWVsZEVycm9ycykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGRFcnJvcnMgPSBkYXRhLmZpZWxkRXJyb3JzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGZpZWxkRXJyb3JzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGRFcnJvciA9IGZpZWxkRXJyb3JzW2ldOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChbJ01pbicsICdNYXgnLCAnRGVjaW1hbE1pbicsICdEZWNpbWFsTWF4J10uaW5jbHVkZXMoZmllbGRFcnJvci5tZXNzYWdlKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZEVycm9yLm1lc3NhZ2UgPSAnU2l6ZSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnZlcnQgJ3NvbWV0aGluZ1sxNF0ub3RoZXJbNF0uaWQnIHRvICdzb21ldGhpbmdbXS5vdGhlcltdLmlkJyBzbyB0cmFuc2xhdGlvbnMgY2FuIGJlIHdyaXR0ZW4gdG8gaXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJ0ZWRGaWVsZCA9IGZpZWxkRXJyb3IuZmllbGQucmVwbGFjZSgvXFtcZCpcXS9nLCAnW10nKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBjb252ZXJ0ZWRGaWVsZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGNvbnZlcnRlZEZpZWxkLnNsaWNlKDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoYEVycm9yIG9uIGZpZWxkICIke2ZpZWxkTmFtZX0iYCwgYGVycm9yLiR7ZmllbGRFcnJvci5tZXNzYWdlfWAsIHsgZmllbGROYW1lIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEgIT09ICcnICYmIGRhdGEubWVzc2FnZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRXJyb3JBbGVydChkYXRhLm1lc3NhZ2UsIGRhdGEubWVzc2FnZSwgZGF0YS5wYXJhbXMpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRXJyb3JBbGVydChkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY2FzZSA0MDQ6CiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoJ05vdCBmb3VuZCcsICdlcnJvci51cmwubm90LmZvdW5kJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhICE9PSAnJyAmJiBkYXRhLm1lc3NhZ2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoZGF0YS5tZXNzYWdlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChlcnJvciAmJiBlcnJvci5jb25maWcgJiYgZXJyb3IuY29uZmlnLnVybCA9PT0gJ2FwaS9hY2NvdW50JyAmJiBlcnJvci5jb25maWcubWV0aG9kID09PSAnZ2V0JykgewogICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdBdXRoZW50aWNhdGlvbiBFcnJvcjogVHJ5aW5nIHRvIGFjY2VzcyB1cmwgYXBpL2FjY291bnQgd2l0aCBHRVQuJyk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKGVycm9yICYmIGVycm9yLm1lc3NhZ2UpIHsKICAgICAgICAgICAgdG9hc3QuZXJyb3IoZXJyb3IubWVzc2FnZSk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB0b2FzdC5lcnJvcignVW5rbm93biBlcnJvciEnKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0pOwp9Owo="},{"version":3,"file":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/config/notification-middleware.ts","sourceRoot":"","sources":["/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/config/notification-middleware.ts"],"names":[],"mappings":"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","sourcesContent":["import { isPromise } from 'react-jhipster';\nimport { toast } from 'react-toastify';\n\nconst addErrorAlert = (message, key?, data?) => {\n  toast.error(message);\n};\nexport default () => next => action => {\n  // If not a promise, continue on\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  /**\n   *\n   * The notification middleware serves to dispatch the initial pending promise to\n   * the promise middleware, but adds a `then` and `catch.\n   */\n  return next(action)\n    .then(response => {\n      if (action.meta && action.meta.successMessage) {\n        toast.success(action.meta.successMessage);\n      } else if (response && response.action && response.action.payload && response.action.payload.headers) {\n        const headers = response.action.payload.headers;\n        let alert: string | null = null;\n        Object.entries<string>(headers).forEach(([k, v]) => {\n          if (k.toLowerCase().endsWith('app-alert')) {\n            alert = v;\n          }\n        });\n        if (alert) {\n          toast.success(alert);\n        }\n      }\n      return Promise.resolve(response);\n    })\n    .catch(error => {\n      if (action.meta && action.meta.errorMessage) {\n        toast.error(action.meta.errorMessage);\n      } else if (error && error.response) {\n        const response = error.response;\n        const data = response.data;\n        if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.includes('/api/account'))))) {\n          let i;\n          switch (response.status) {\n            // connection refused, server not reachable\n            case 0:\n              addErrorAlert('Server not reachable', 'error.server.not.reachable');\n              break;\n\n            case 400: {\n              const headers = Object.entries<string>(response.headers);\n              let errorHeader: string | null = null;\n              let entityKey: string | null = null;\n              headers.forEach(([k, v]: [string, string]) => {\n                if (k.toLowerCase().endsWith('app-error')) {\n                  errorHeader = v;\n                } else if (k.toLowerCase().endsWith('app-params')) {\n                  entityKey = v;\n                }\n              });\n              if (errorHeader) {\n                const entityName = entityKey;\n                addErrorAlert(errorHeader, errorHeader, { entityName });\n              } else if (data !== '' && data.fieldErrors) {\n                const fieldErrors = data.fieldErrors;\n                for (i = 0; i < fieldErrors.length; i++) {\n                  const fieldError = fieldErrors[i];\n                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                    fieldError.message = 'Size';\n                  }\n                  // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                  const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                  const fieldName = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\n                  addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message}`, { fieldName });\n                }\n              } else if (data !== '' && data.message) {\n                addErrorAlert(data.message, data.message, data.params);\n              } else {\n                addErrorAlert(data);\n              }\n              break;\n            }\n            case 404:\n              addErrorAlert('Not found', 'error.url.not.found');\n              break;\n\n            default:\n              if (data !== '' && data.message) {\n                addErrorAlert(data.message);\n              } else {\n                addErrorAlert(data);\n              }\n          }\n        }\n      } else if (error && error.config && error.config.url === 'api/account' && error.config.method === 'get') {\n        /* eslint-disable no-console */\n        console.log('Authentication Error: Trying to access url api/account with GET.');\n      } else if (error && error.message) {\n        toast.error(error.message);\n      } else {\n        toast.error('Unknown error!');\n      }\n      return Promise.reject(error);\n    });\n};\n"]}]}