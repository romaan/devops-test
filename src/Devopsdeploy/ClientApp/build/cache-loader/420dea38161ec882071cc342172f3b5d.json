{"remainingRequest":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/ts-loader/index.js??ref--4-3!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/entities/index.tsx","dependencies":[{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/entities/index.tsx","mtime":1596331334517},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7Ci8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMKaW1wb3J0IEVycm9yQm91bmRhcnlSb3V0ZSBmcm9tICdhcHAvc2hhcmVkL2Vycm9yL2Vycm9yLWJvdW5kYXJ5LXJvdXRlJzsKaW1wb3J0IEVudmlyb25tZW50IGZyb20gJy4vZW52aXJvbm1lbnQnOwppbXBvcnQgUHJvamVjdCBmcm9tICcuL3Byb2plY3QnOwppbXBvcnQgUmVsZWFzZSBmcm9tICcuL3JlbGVhc2UnOwppbXBvcnQgRGVwbG95bWVudCBmcm9tICcuL2RlcGxveW1lbnQnOwppbXBvcnQgQ29uZmlnIGZyb20gJy4vY29uZmlnJzsKLyogamhpcHN0ZXItbmVlZGxlLWFkZC1yb3V0ZS1pbXBvcnQgLSBKSGlwc3RlciB3aWxsIGFkZCByb3V0ZXMgaGVyZSAqLwpjb25zdCBSb3V0ZXMgPSAoeyBtYXRjaCB9KSA9PiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwKICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3dpdGNoLCBudWxsLAogICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRXJyb3JCb3VuZGFyeVJvdXRlLCB7IHBhdGg6IGAke21hdGNoLnVybH1lbnZpcm9ubWVudGAsIGNvbXBvbmVudDogRW52aXJvbm1lbnQgfSksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvckJvdW5kYXJ5Um91dGUsIHsgcGF0aDogYCR7bWF0Y2gudXJsfXByb2plY3RgLCBjb21wb25lbnQ6IFByb2plY3QgfSksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvckJvdW5kYXJ5Um91dGUsIHsgcGF0aDogYCR7bWF0Y2gudXJsfXJlbGVhc2VgLCBjb21wb25lbnQ6IFJlbGVhc2UgfSksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvckJvdW5kYXJ5Um91dGUsIHsgcGF0aDogYCR7bWF0Y2gudXJsfWRlcGxveW1lbnRgLCBjb21wb25lbnQ6IERlcGxveW1lbnQgfSksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvckJvdW5kYXJ5Um91dGUsIHsgcGF0aDogYCR7bWF0Y2gudXJsfWNvbmZpZ2AsIGNvbXBvbmVudDogQ29uZmlnIH0pKSkpOwpleHBvcnQgZGVmYXVsdCBSb3V0ZXM7Cg=="},{"version":3,"file":"/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/entities/index.tsx","sourceRoot":"","sources":["/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/node_modules/eslint-loader/dist/cjs.js!/Users/romaan/interview-test/src/Devopsdeploy/ClientApp/src/app/entities/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,6DAA6D;AAC7D,OAAO,kBAAkB,MAAM,uCAAuC,CAAC;AAEvE,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,sEAAsE;AAEtE,MAAM,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAC5B;IACE,oBAAC,MAAM;QAEL,oBAAC,kBAAkB,IAAC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,aAAa,EAAE,SAAS,EAAE,WAAW,GAAI;QAC/E,oBAAC,kBAAkB,IAAC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,SAAS,EAAE,SAAS,EAAE,OAAO,GAAI;QACvE,oBAAC,kBAAkB,IAAC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,SAAS,EAAE,SAAS,EAAE,OAAO,GAAI;QACvE,oBAAC,kBAAkB,IAAC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,YAAY,EAAE,SAAS,EAAE,UAAU,GAAI;QAC7E,oBAAC,kBAAkB,IAAC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,QAAQ,EAAE,SAAS,EAAE,MAAM,GAAI,CAE9D,CACL,CACP,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import React from 'react';\nimport { Switch } from 'react-router-dom';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Environment from './environment';\nimport Project from './project';\nimport Release from './release';\nimport Deployment from './deployment';\nimport Config from './config';\n/* jhipster-needle-add-route-import - JHipster will add routes here */\n\nconst Routes = ({ match }) => (\n  <div>\n    <Switch>\n      {/* prettier-ignore */}\n      <ErrorBoundaryRoute path={`${match.url}environment`} component={Environment} />\n      <ErrorBoundaryRoute path={`${match.url}project`} component={Project} />\n      <ErrorBoundaryRoute path={`${match.url}release`} component={Release} />\n      <ErrorBoundaryRoute path={`${match.url}deployment`} component={Deployment} />\n      <ErrorBoundaryRoute path={`${match.url}config`} component={Config} />\n      {/* jhipster-needle-add-route-path - JHipster will add routes here */}\n    </Switch>\n  </div>\n);\n\nexport default Routes;\n"]}]}